openapi: '3.0.3'
info:
  version: 1.0.0
  title: Location Tracker API
servers:
  - url: http://localhost:3000
paths:
  /users/me:
    get:
      tags:
        - Users
      description: Get your info
      responses:
        200:
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - Users
      description: Update your info. If yuo change your public key, all your places and received locations will be removed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alias:
                  type: string
                  minLength: 1
                  maxLength: 512
                  description: User alias
                publicKey:
                  type: string
                  description: User public key
      responses:
        202:
          description: Info updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/auth:
    post:
      tags:
        - Users
      description: Authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuth'
      responses:
        202:
          description: Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /users/register:
    post:
      tags:
        - Users
      description: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        201:
          description: New user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      description: User
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: false
          description: User id
        alias:
          type: string
          minLength: 1
          maxLength: 512
          nullable: false
          description: User alias
        publicKey:
          type: string
          format: byte
          nullable: false
          description: User public key
      required:
        - id
        - alias
        - publicKey
    UserCreate:
      description: User create data
      type: object
      properties:
        alias:
          type: string
          minLength: 1
          maxLength: 512
          nullable: false
          description: User alias
        publicKey:
          type: string
          nullable: false
          description: User public key
        password:
          type: string
          nullable: false
          description: User password
      required:
        - alias
        - publicKey
        - password
    TokenResponse:
      description: Token response
      type: object
      properties:
        token:
          type: string
          nullable: false
          description: Token
      required:
        - token
    UserAuth:
      description: User auth data
      type: object
      properties:
        alias:
          type: string
          minLength: 1
          maxLength: 512
          nullable: false
          description: User alias
        password:
          type: string
          nullable: false
          description: User password
      required:
        - alias
        - password
    Error:
      description: Error
      type: object
      properties:
        code:
          type: string
          nullable: false
          description: Error code
          maxLength: 128
        message:
          type: string
          nullable: false
          description: Error message
      required:
        - code
        - message